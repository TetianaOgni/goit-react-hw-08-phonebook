{"version":3,"file":"static/js/692.335151ad.chunk.js","mappings":"2MACA,G,QAA4B,6B,UC8B5B,EA5BiB,WACf,OACE,SAAC,IAAD,CAAMA,GAAG,WACLC,MAAM,SACNC,QAAU,SACTC,QAAQ,SACPC,EAAG,EACHC,EAAE,OACFC,EAAE,QANR,UASE,gBAAKC,UAAWC,EAAhB,UACC,SAAC,KAAD,CACCJ,EAAG,GACHJ,GAAG,QACFS,QAAQ,KACRC,WAAW,SACXC,UAAU,SALZ,6MAcN,C,8KCrBGC,GAAOC,EAAAA,EAAAA,IAAW,SAAeC,EAAOb,GAC1C,IAAQE,EAAkEW,EAAlEX,UAAWY,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,QAASC,EAAuCH,EAAvCG,KAAMC,EAAiCJ,EAAjCI,MAAOC,EAA0BL,EAA1BK,KAAMC,EAAoBN,EAApBM,OAAWC,GAAjE,OAA0EP,EAA1E,GACMQ,EAAS,CACbZ,QAAS,OACTa,cAAepB,EACfqB,WAAYT,EACZU,eAAgBT,EAChBU,SAAUT,EACVU,UAAWT,EACXU,SAAUT,EACVU,WAAYT,GAEd,OAAuBU,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,KAAD,QAAe9B,IAAAA,EAAK,MAAOqB,GAAWD,GACjE,IACDT,EAAK,YAAc,M,mJCdfoB,GAAMD,EAAAA,EAAAA,GAAO,OACjBC,EAAIC,YAAc,MAClB,IAAIrB,GAASC,EAAAA,EAAAA,IAAW,SAAiBqB,EAAOC,GAC9C,IAAQhB,EAAwCe,EAAxCf,KAAR,EAAgDe,EAAlCd,cAAAA,OAAd,SAAuCC,GAAvC,OAAgDa,EAAhD,GACMxB,EAASU,EAAgB,CAAEG,QAAS,OAAQa,WAAY,SAAUP,eAAgB,UAAa,GACrG,OAAuBQ,EAAAA,EAAAA,KACrBL,GADwB,QAGtBG,IAAAA,EACAR,QAASR,EACTO,OAAK,kBACAhB,GADA,IAEH4B,WAAY,EACZC,SAAU,KAETlB,GAGR,IACDT,EAAOqB,YAAc,UACRpB,EAAAA,EAAAA,IAAW,SAAiBqB,EAAOC,GAC9C,IAAQhB,EAAkBe,EAAlBf,KAASE,GAAjB,OAA0Ba,EAA1B,GACA,OAAuBG,EAAAA,EAAAA,KAAIzB,GAAD,QAAWO,KAAAA,EAAMgB,IAAAA,EAAK,aAAc,UAAad,GAC5E,IACMY,YAAc,Q","sources":["webpack://react-homework-template/./src/pages/HomePage.module.css?fc1d","pages/HomePage.jsx","../node_modules/@chakra-ui/layout/src/flex.tsx","../node_modules/@chakra-ui/layout/src/box.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"HomePage_Container__7W92z\"};","import { Box, Flex } from '@chakra-ui/react'\nimport React from 'react'\nimport  css from \"./HomePage.module.css\"\nconst HomePage = () => {\n  return (\n    <Flex bg=\"gray.100\"\n        align=\"center\"\n        flexDir = \"column\"\n         justify=\"center\"\n          p={5}\n          w=\"100%\"  // Занимает 100% ширины экрана\n          h=\"100vh\"\n        \n>\n      <div className={css.Container}>\n       <Box\n        p={10}\n        bg=\"white\"\n         rounded=\"md\" \n         alignItems=\"center\"\n         textAlign=\"center\"\n         >\n\n        \"Hello, you are on the page of a very simple phone book. You can register and use the application to store your contacts. You can add, search by name, and delete your contacts. Good luck!\"\n\n      </Box>\n      </div>\n</Flex>\n  )\n}\n\nexport default HomePage\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n","import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface BoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Box is the most abstract component on top of which other chakra\n * components are built. It renders a `div` element by default.\n *\n * @see Docs https://chakra-ui.com/box\n */\nexport const Box = chakra(\"div\")\n\nBox.displayName = \"Box\"\n\n/**\n * As a constraint, you can't pass size related props\n * Only `size` would be allowed\n */\ntype Omitted = \"size\" | \"boxSize\" | \"width\" | \"height\" | \"w\" | \"h\"\n\nexport interface SquareProps extends Omit<BoxProps, Omitted> {\n  /**\n   * The size (width and height) of the square\n   */\n  size?: BoxProps[\"width\"]\n  /**\n   * If `true`, the content will be centered in the square\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport const Square = forwardRef<SquareProps, \"div\">(function Square(\n  props,\n  ref,\n) {\n  const { size, centerContent = true, ...rest } = props\n\n  const styles: SystemStyleObject = centerContent\n    ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }\n    : {}\n\n  return (\n    <Box\n      ref={ref}\n      boxSize={size}\n      __css={{\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0,\n      }}\n      {...rest}\n    />\n  )\n})\n\nSquare.displayName = \"Square\"\n\nexport const Circle = forwardRef<SquareProps, \"div\">(function Circle(\n  props,\n  ref,\n) {\n  const { size, ...rest } = props\n  return <Square size={size} ref={ref} borderRadius=\"9999px\" {...rest} />\n})\n\nCircle.displayName = \"Circle\"\n"],"names":["bg","align","flexDir","justify","p","w","h","className","css","rounded","alignItems","textAlign","props","forwardRef","direction","wrap","basis","grow","shrink","rest","styles","display","flexDirection","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","div","__css","Flex","chakra","displayName","Square","size","centerContent","boxSize","Box","Circle","borderRadius"],"sourceRoot":""}