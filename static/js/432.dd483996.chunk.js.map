{"version":3,"file":"static/js/432.dd483996.chunk.js","mappings":"qSAgME,UA9KmB,WAEnB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGZC,SAAU,SAACC,GACXC,QAAQC,IAAIF,GACZZ,GAASe,EAAAA,EAAAA,IAAkBH,GAE1B,IAEP,OAAIV,GAAsB,SAAE,KAAF,CAAWc,GAAG,eAElC,SAAC,IAAD,CAAMC,GAAG,WAAWC,MAAM,SAASC,QAAQ,SAASC,EAAE,QAAtD,UACE,gBAAKC,UAAWC,EAAAA,GAAAA,UAAhB,UACA,SAAC,KAAD,CAAKL,GAAG,QAAQM,EAAG,EAAGC,QAAQ,KAA9B,UACE,iBAAMb,SAAUN,EAAOoB,aAAvB,UACE,UAAC,IAAD,CAAQC,QAAS,EAAGR,MAAM,aAA1B,WACA,UAAC,KAAD,YACI,SAAC,IAAD,CAAWS,QAAQ,OAAnB,uBACA,SAAC,EAAAC,EAAD,CACEC,GAAG,OACHrB,KAAK,OACLsB,KAAK,OACLC,QAAQ,SACRC,SAAU3B,EAAO4B,aACjBC,MAAO7B,EAAOO,OAAOJ,KACrB2B,UAAW,EACXC,UAAQ,QAGZ,UAAC,KAAD,YACE,SAAC,IAAD,CAAWT,QAAQ,QAAnB,oBACA,SAAC,EAAAC,EAAD,CACEC,GAAG,QACHrB,KAAK,QACLsB,KAAK,QACLC,QAAQ,SACRC,SAAU3B,EAAO4B,aACjBC,MAAO7B,EAAOO,OAAOH,MACrB2B,UAAQ,QAGZ,UAAC,KAAD,YACE,SAAC,IAAD,CAAWT,QAAQ,WAAnB,uBACA,SAAC,EAAAC,EAAD,CACEC,GAAG,WACHrB,KAAK,WACLsB,KAAK,WACLC,QAAQ,SACRC,SAAU3B,EAAO4B,aACjBC,MAAO7B,EAAOO,OAAOF,SACrByB,UAAW,EACXC,UAAQ,QAGZ,SAAC,IAAD,CAAQN,KAAK,SAASO,YAAY,SAASC,MAAM,OAAjD,gCAUP,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUserThunk } from \"redux/operations\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  css,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack\n} from \"@chakra-ui/react\";\nimport { selectAuthenticated } from \"redux/authReducer\";\nimport { Navigate } from \"react-router-dom\";\n// import css from \"../index.css\"\n\nconst RegisterPage = () => {\n\n  const dispatch = useDispatch()\n\n  const authenticated = useSelector(selectAuthenticated)\n  \n      const formik = useFormik({\n        initialValues: {\n          name: \"\",  \n          email: \"\",\n          password: \"\",\n          \n        },\n        onSubmit: (values) => {\n        console.log(values)\n        dispatch(registerUserThunk(values))\n    \n        }\n      });\n  if (authenticated) return < Navigate to='/contacts' />  \n      return (\n        <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n          <div className={css.Container}>\n          <Box bg=\"white\" p={6} rounded=\"md\">\n            <form onSubmit={formik.handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n              <FormControl>\n                  <FormLabel htmlFor=\"name\">Username</FormLabel>\n                  <Input\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    variant=\"filled\"\n                    onChange={formik.handleChange}\n                    value={formik.values.name}\n                    minLength={2}\n                    required\n                  />\n                </FormControl>\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Email</FormLabel>\n                  <Input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    variant=\"filled\"\n                    onChange={formik.handleChange}\n                    value={formik.values.email}\n                    required\n                  />\n                </FormControl>\n                <FormControl>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"filled\"\n                    onChange={formik.handleChange}\n                    value={formik.values.password}\n                    minLength={7}\n                    required\n                  />\n                </FormControl>\n                <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n                  Register\n                </Button>\n              </VStack>\n            </form>\n          </Box>\n          </div>\n        </Flex>\n    \n      )\n        }\n\n\n\n    // const handleSubmit = event => {\n    //     event.preventDefault();\n    \n    //     const form = event.currentTarget;\n    \n    //     const name = form.elements.userName.value;\n    //     const email = form.elements.userEmail.value;\n    //     const password = form.elements.userPassword.value;\n    \n    //     dispatch(\n    //       registerUserThunk({\n    //         name,\n    //         email,\n    //         password,\n    //       })\n    //     );\n    //   };\n    //   return (\n    //     <div>\n    //       <h1>Register Your Account</h1>\n    //       <form onSubmit={handleSubmit}>\n    //         <label>\n    //           <p>Name:</p>\n    //           <input name=\"userName\" type=\"text\" required minLength={2} />\n    //         </label>\n    //         <br />\n    //         <label>\n    //           <p>Email:</p>\n    //           <input name=\"userEmail\" type=\"email\" required />\n    //         </label>\n    //         <br />\n    //         <label>\n    //           <p>Password:</p>\n    //           <input name=\"userPassword\" type=\"password\" required minLength={7} />\n    //         </label>\n    //         <br />\n    //         <button type=\"submit\">Sign Up</button>\n    //       </form>\n    //     </div>\n    //   );\n    // };\n    // return (\n    //     <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n    //       <Box bg=\"white\" p={6} rounded=\"md\">\n    //         <form onSubmit={handleSubmit}>\n    //           <VStack spacing={4} align=\"flex-start\">\n    //           <FormControl>\n    //               <FormLabel htmlFor=\"name\">Username</FormLabel>\n    //               <Input\n    //                 id=\"name\"\n    //                 name=\"name\"\n    //                 type=\"text\"\n    //                 variant=\"filled\"\n    //                 // value={values.name}\n    //                 minLength={2}\n    //                 required\n    //               />\n    //             </FormControl>\n    //             <FormControl>\n    //               <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n    //               <Input\n    //                 id=\"email\"\n    //                 name=\"email\"\n    //                 type=\"email\"\n    //                 variant=\"filled\"\n    //                 // value={values.email}\n    //                 required\n    //               />\n    //             </FormControl>\n    //             <FormControl>\n    //               <FormLabel htmlFor=\"password\">Password</FormLabel>\n    //               <Input\n    //                 id=\"password\"\n    //                 name=\"password\"\n    //                 type=\"password\"\n    //                 variant=\"filled\"\n    //                 // value={values.password}\n    //                 minLength={7}\n    //                 required\n    //               />\n    //             </FormControl>\n    //             <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n    //               Login\n    //             </Button>\n    //           </VStack>\n    //         </form>\n    //       </Box>\n    //     </Flex>\n    \n    //   )\n        // }\n\n        \n\n\n    // export default RegisterForm\n  export default RegisterPage"],"names":["dispatch","useDispatch","authenticated","useSelector","selectAuthenticated","formik","useFormik","initialValues","name","email","password","onSubmit","values","console","log","registerUserThunk","to","bg","align","justify","h","className","css","p","rounded","handleSubmit","spacing","htmlFor","I","id","type","variant","onChange","handleChange","value","minLength","required","colorScheme","width"],"sourceRoot":""}